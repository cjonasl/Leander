@using PagedList
@using PagedList.Mvc
@model CAST.Models.Logs.ConnectLogsModel

@{
    ViewBag.Title = "Logs view";
}

@section Scripts
{
    <script src="@Url.Content("~/Scripts/jquery.shorten.js")"></script>
    <script>
        $(function () {
            $(".shorten").shorten(
                {
                    showChars: '50',
                    moreText: 'show',
                    lessText: 'hide'
                }
            );
        });
    </script>
}

<script src="/Scripts/jquery.responsiveTabs.js"></script>
<script type="text/javascript">
    $(document).ready(function(){
	   		$('#responsiveTabsDemo').responsiveTabs({
		    startCollapsed: 'accordion'
		});
	)};
</script>

<h1>Test Tabs</h1>
<div id="responsiveTabsDemo">
    <ul>
        <li><a href="#tab-1"> Tab 1 </a></li>
        <li><a href="#tab-2"> Tab 2 </a></li>
        <li><a href="#tab-3"> Tab 3 </a></li>
    </ul>

    <div id="tab-1"> #1 Content </div>
    <div id="tab-2"> #2 Content </div>
    <div id="tab-3"> #3 Content </div>
</div>



<div class="section section__split">
    <div class="section__box">

        <span class="section__heading">Logs view</span>

        <div class="section__content">

            <div id="responsiveTabsDemo">
                <ul>
                    <li><a href="#tab-1"> File log </a></li>
                    <li><a href="#tab-2"> Connect log </a></li>
                </ul>

                <div id="tab-1"> #1 File Content </div>
                <div id="tab-2"> #2 Connect Content </div>
            </div>

            @using (Html.BeginForm("ConnectLogFilter", "Logs", FormMethod.Post))
        {


            <table class="data__stack">
                <tr>
                    <td class="data__title">Service id:</td>
                </tr>
                <tr>
                    <td>@Html.DropDownListFor(x => x.FilterServiceId, Model.FilterServiceIdList, new { @class = "select" })</td>
                </tr>
                <tr>
                    <td class="data__title">Other id:</td>
                </tr>
                <tr>
                    <td>@Html.DropDownListFor(x => x.FilterOtherId, Model.FilterOtherIdList, new { @class = "select" })</td>
                </tr>
                <tr>
                    <td class="data__title">Events:</td>
                </tr>
                <tr>
                    <td>@Html.DropDownListFor(x => x.FilterEvent, Model.FilterEventList, new { @class = "select" })</td>
                    <td class="data__title">Users:</td>
                </tr>
                <tr>
                    <td>@Html.DropDownListFor(x => x.FilterUserName, Model.FilterUserNameList, new { @class = "select" })</td>
                </tr>
                <footer>
                    <td colspan="4">
                        <input type="submit" class="button" value="Filter" />
                    </td>
                </footer>
            </table>
        }
        </div>
    </div>

    <div class="section__box">
        <div class="section__content">

            @if (Model.LogRecords.Count > 0)
        {
            <table class="data__multi">
                <tr>
                    <th>Date</th>
                    <th>User</th>
                    <th>Id</th>
                    <th>Event</th>
                    <th>Result</th>
                </tr>
                @foreach (var record in ViewBag.oneLogPage)
                {
                <tr>
                    <td data-th="Date">@record.CreateDate</td>
                    <td data-th="User">@record.UserId</td>
                    <td data-th="ID">
                        @(
                                !string.IsNullOrEmpty(record.ServiceId) ? record.ServiceId : record.OtherId)
                </td>
                <td data-th="Event">@record.Event</td>
                <td data-th="Result" class="note">
                    @*Short: @(record.Request.Substring(0, Math.Min(record.Request.Length, 200)))*@

                    <h4>Request:</h4>
                    @record.Request

                    <h4>Response:</h4>
                    @record.Response

                    <span class="error">
                        Error:
                        @(record.ErrorCode + " - " +  record.ErrorMessage)
                    </span>
                </td>
            </tr>
                }
            </table>
            @Html.PagedListPager( (IPagedList)ViewBag.oneLogPage, page => Url.Action("ConnectLogLogs", new { page }), options: PagedListRenderOptions.DefaultPlusFirstAndLast )
        }
        else
        {
            <span class="error">No logs</span>
        }
        </div>
    </div>
