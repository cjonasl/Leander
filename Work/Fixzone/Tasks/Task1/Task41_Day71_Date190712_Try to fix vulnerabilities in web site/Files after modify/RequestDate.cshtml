@using System.Web.Optimization

@model CAST.ViewModels.BookNewService.AppointmentModel
@{
    ViewBag.Title = "AppointmentBooking";
}

@Styles.Render("~/css/datepicker-css")

@section Scripts
{

    <script type="text/javascript">
        $(document).ready(function () {

        //    var CustomerPreferedDate = new DatePicker("#date-of-CustomerPrefered-datepicker", "#date-of-CustomerPrefered-datepicker-btn");
            ////    var waitNotification = new Dialog(new DefaulDialogSettings().wait); //$("#ReportFault").val();
        //    CustomerPreferedDate.setDateSelected('@Model.PreferredVisitDate');
         //   alert('@Model.PreferredVisitDate');
          //  alert(CustomerPreferedDate);
            if ('@ViewBag.NoAppointment' != '') {
                var faultdesc = jquery.trim('@Model.FaultDescr');
                var d = new Date();

                var month = d.getMonth() + 1;
                var day = d.getDate() + 3;

                var eventDate = (day < 10 ? '0' : '') + day + '/' +
                    (month < 10 ? '0' : '') + month + '/' +
                    d.getFullYear();
                var engineerid = Convert.ToInt32(System.Configuration.ConfigurationManager.AppSettings["dummy_eng"].ToString());//1000;
                if ('@ViewBag.Courier' == '')//&& '@ViewBag.Courier' != null)
                {
                    //var msg = " Do you want to reschedule your booking for " + eventDate + "?";
                    var msg = "Unfortunately, the repair visit date you selected is not available. In order to continue with reporting your fault please call us on 0800 092 9051  Monday- Friday 9am - 8pm and Saturday and Sunday 10am - 4pm Or if you’d like to book an earlier date before the one you selected, please click ‘Cancel’ and choose a new date.";
                   
                    }
                    else {
                    var msg = "Unfortunately, the collection date you selected is not available. In order to continue with reporting your fault please call us on  0800 092 9051  Monday- Friday 9am - 8pm and Saturday and Sunday 10am - 4pm Or if you’d like to book an earlier date before the one you selected, please click ‘Cancel’ and choose a new date.";
                    }
                    $("#msg").text(msg);

                    var unsavedInfoDialog = new Dialog(new DefaulDialogSettings().confirmBooking);

                    var waitNotification = new Dialog(new DefaulDialogSettings().wait);
                    //$("#eventDate").text(eventDate + "?");
                    $("#divConfirm").dialog({
                        height: 'auto',
                        width: 500,
                        modal: true,
                        title: "Booking Confirmation", closeIcon: '',
                        refreshPageAfterClose: false,
                        buttons: [{
                            text: 'Cancel',
                            "class": "button button-secondary no-btn pull-right",
                            click: function () {
                                $("#divConfirm").dialog("close");
                                //$("#divConfirm").close;
                                // $(this).close;
                            }
                        },
                            {
                                text: 'Ok',
                                "class": "button pull-right",
                                href: '',

                                click: function () {
                                   /// alert("FFF");
                                    if ($("#ReportFault").val() == "") {
                                        $("#divError").toggle();
                                        $("#divConfirm").dialog("close");
                                    }
                                    else{

                                    // $("#divConfirm").close();
                                   waitNotification.show();

                                    $.ajax({
                                        url: '/BookNewService/BookNow',
                                        type: 'post',
                                        dataType: 'json',
                                        // data: { EventDate: eventDate, Engineerid: engineerid, faultdesc: faultdesc },
                                        data: AddAntiForgeryToken({ EventDate: eventDate, Engineerid: engineerid, faultdesc: faultdesc, isNoDate: true }),

                                        success: function (json) {
                                            //alert(json["success"]);
                                            if (json["success"]) {
                                                waitNotification.close();
                                                //book call ok
                                                //alert(json["fraudCheckCodeField"]);
                                                var fraudcde = json["fraudCheckCodeField"];
                                                var url = "@Html.Raw(@Url.Action("BookedJobConfirmation", "BookNewService", new { Serviceid = "__Serviceid__", engineerid = "__engineerid__", eventdate = "__eventdate__", fraudCheckCodeField = "__fraudcde__", isNoDate = "__isNoDate__" }))";
                                                window.location.href = json["FormPath"];// url.replace('__Serviceid__', json["serviceid"]).replace('__engineerid__', engineerid).replace('__eventdate__', eventDate);






                                            } else {

                                                $("#errmsg").html("Your online booking request processed failed - " + json.errorMessage);
                                                waitNotification.close();
                                                $("#divConfirm").dialog("close");

                                                //window.location.href = json["FormPath"];

                                            }

                                        }
                                    })
                                }
                            }

                            }]
                    })
                        $("#divConfirm").show();

            }
            

            if ('@ViewBag.IsLowCost' != "") {
         
            
                $("#btnCourier").show();
                $("#divRequestDate").hide();
            }

            //$("#back-btn").click(function (e) {
            //    e.preventDefault();
            //    var back = "true"
            //    window.location.href = "/BookNewService/CustomerPage?back=" + back;

            //});
                 $("#back-btn").click(function (e) {
                e.preventDefault();
                if ('@ViewBag.RescheduleJob' == null || '@ViewBag.RescheduleJob' =="" ) {
                    window.location.href = "/BookNewService/CustomerPage";
                }
                else {
                    window.location.href = "/Job/GoToDetails/0"
                }

            });


            var CustomerPreferedDate = new DatePicker("#date-of-CustomerPrefered-datepicker", "#date-of-CustomerPrefered-datepicker-btn");
           var waitNotification = new Dialog(new DefaulDialogSettings().wait);
            CustomerPreferedDate.setDateSelected('@Model.PreferredVisitDate');

            $("#get-date-info").click(function () {

                // if ('@ViewBag.RescheduleJob' == "") {
                ReplaceAction('#SoftService-form', "/BookNewService/GetAvailabilty");
                    $('#SoftService-form').submit();
                //}
              
            }
             );
          

            $('.bookDate').click(function (e) {
               // var id = ($(".button").attr('id'));
                e.preventDefault();
             //   alert($(this));
               // alert($(this).attr('href'));
                var Params = $(this).attr('href').split(',');
                var engineerid = parseInt(Params[1]);
                var faultdesc = $("#ReportFault").val();
                var id = (this.id);
               
                var eventDate = Params[0].toString().substring(1, Params[0].toString().length - 2);


                if ($("#ReportFault").val() == "") {
                    $("#divError").toggle();
                      alert("Please add a fault description and try again.");

                    return false;
                }
                if (id != "btnSubmit") {
                    // var msg = "Are you sure you want to continue?"

                    if ('@ViewBag.RescheduleJob' != '') {
                        var msg = " Do you want to reschedule your booking for " + eventDate + "?";
                        faultdesc='@Model.FaultDescr';
                    }
                    else {
                        var msg = "Do you want to book for " + eventDate + "?";
                    }
                    $("#msg").text(msg);

                    var unsavedInfoDialog = new Dialog(new DefaulDialogSettings().confirmBooking);
                 //   alert(eventDate); alert(faultdesc); alert(engineerid);
                    var waitNotification = new Dialog(new DefaulDialogSettings().wait);
                    $("#eventDate").text(eventDate + "?");
                    $("#divConfirm").dialog({
                        height: 'auto',
                        width: 500,
                        modal: true,
                        title: "Booking Confirmation", closeIcon: '',
                        refreshPageAfterClose: false,
                        buttons: [{
                            text: 'No',
                            "class": "button button-secondary no-btn pull-right",
                            click: function () {
                                $("#divConfirm").dialog("close");
                                //$("#divConfirm").close;
                                // $(this).close;
                            }
                        },
                            {
                                text: 'Yes',
                                "class": "button pull-right",
                                href: '',

                                click: function () {
                                    // $("#divConfirm").close();
                                    waitNotification.show();

                                    $.ajax({
                                        url: '/BookNewService/BookNow',
                                        type: 'post',
                                        dataType: 'json',
                                        // data: { EventDate: eventDate, Engineerid: engineerid, faultdesc: faultdesc },
                                        data: AddAntiForgeryToken({ EventDate: eventDate, Engineerid: engineerid, faultdesc: faultdesc, isNoDate: false }),

                                        success: function (json) {
                                            //alert(json["success"]);
                                            if (json["success"]) {
                                                waitNotification.close();
                                                //book call ok
                                                //alert(json["fraudCheckCodeField"]);
                                                var fraudcde = json["fraudCheckCodeField"];
                                                var url = "@Html.Raw(@Url.Action("BookedJobConfirmation", "BookNewService", new { Serviceid = "__Serviceid__", engineerid = "__engineerid__", eventdate = "__eventdate__", fraudCheckCodeField = "__fraudcde__", isNoDate = "__isNoDate__" }))";
                                                window.location.href = json["FormPath"];// url.replace('__Serviceid__', json["serviceid"]).replace('__engineerid__', engineerid).replace('__eventdate__', eventDate);






                                            } else {

                                                //book call failed
                                                $("#errmsg").html("Your online booking request processed failed - " + json.errorMessage);
                                                waitNotification.close();
                                                $("#divConfirm").dialog("close");
                                                
                                              //  window.location.href = json["FormPath"];

                                            }

                                        }
                                    })
                                }

                            }]
                    })
                        //$("#divConfirm").show();
                    }
                    else {
                        var waitNotification = new Dialog(new DefaulDialogSettings().wait);
                        waitNotification.show();

                        $.ajax({
                            url: '/BookNewService/BookNow',
                            type: 'post',
                            dataType: 'json',
                            // data: { EventDate: eventDate, Engineerid: engineerid, faultdesc: faultdesc },
                            data: AddAntiForgeryToken({ EventDate: eventDate, Engineerid: engineerid, faultdesc: faultdesc, isNoDate: false }),

                            success: function (json) {
                                //alert(json["success"]);
                                if (json["success"]) {
                                    waitNotification.close();
                                    //book call ok
                                    //alert(json["fraudCheckCodeField"]);
                                    var fraudcde = json["fraudCheckCodeField"];
                                    var url = "@Html.Raw(@Url.Action("BookedJobConfirmation", "BookNewService", new { Serviceid = "__Serviceid__", engineerid = "__engineerid__", eventdate = "__eventdate__", fraudCheckCodeField = "__fraudcde__", isNoDate = "__isNoDate__" }))";
                                window.location.href = json["FormPath"];// url.replace('__Serviceid__', json["serviceid"]).replace('__engineerid__', engineerid).replace('__eventdate__', eventDate);






                                }
                                else {

                                    $("#errmsg").html("Your online booking request processed failed - " + json.errorMessage);
                                    waitNotification.close();
                                    $("#divConfirm").dialog("close");

                                    //window.location.href = json["FormPath"];

                                }
                        }
                    })
                }
            })

            function doAction(eventDate, engineerid, faultdesc) {
            }

        });
        AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
           // alert($('input[name=__RequestVerificationToken]').val());
            return data;
        };
    </script>
}
  @*&& Model.IsReschedule != null)*@
@using (Html.BeginForm("BookJob", "BookNewService", FormMethod.Post, new { @id = "SoftService-form" }))
{
     @Html.AntiForgeryToken()
	
    <div class="section section__full">
        <div class="section__box">
            @Html.HiddenFor(model=>model.VisitCd)

            @if (Model.IsLowCost == false && ViewBag.Courier == null && ViewBag.RescheduleJob == null && Model.IsReschedule == null && Model.IsLowCost != null)
            {
                <span class="section__heading">Book Standard Repair</span>
            }
            else if (ViewBag.RescheduleJob != null)
            {
                <span class="section__heading">Reschedule Appointment</span>
            }
              else if(Model.IsLowCost != null )
            {
                <span class="section__heading">Book for Replacement</span>
            }
            else if (ViewBag.Courier != null && ViewBag.Courier)
            {
                <span class="section__heading">Book a Courier Collection</span>
               
            }


            else
            {
                <span class="section__heading">Book Standard Repair</span>
            }

            <div class="section__content">

                <div class="data__stack" id="BookTable">
                    @*---customer info---*@
                    @if (ViewBag.RescheduleJob == null)
                    {
                        if (ViewBag.Courier != null && Model.IsLowCost == null)
                        {
                          
                        <div>
                            <span >Your item needs to be inspected and repaired at our depot. We will arrange for a courier to collect the item.</span><br />
                        </div>
                        <div>&nbsp;</div>
                        }
                        <div>
                            <span class="data__title">Please describe your product fault below. This information will assist us in dealing with your fault more efficiently</span>
                        </div>
                        
                        <div>
                            <span>@Html.TextAreaFor(x => x.FaultDescr, new { @class = "input", tabindex = 20, @id = "ReportFault" })
                            </span>
                        </div>
                        <div id="divError" style="display: none"><span style="color: Red;">Please add a fault description and try again.</span>   </div>
                    }
                    <div id="btnCourier" style="display: none">

                        @*  <button type="submit" id="btnCourierBook">Submit</button>*@
                        <a href="@String.Format("'{0}' ,{1},{2}", DateTime.Now.AddDays(4).ToShortDateString(), Convert.ToInt32(System.Configuration.ConfigurationManager.AppSettings["dummy_eng"].ToString()), false)" class="button bookDate" id="btnSubmit">Submit</a>
                    </div>
                    <div id="divRequestDate">
                        <div>
                            <span>@Html.Partial("~/Views/BookNewService/_RequestDate.cshtml", Model.availabiltyResponseModel)</span>
                        </div>
                       @*  @if (ViewBag.RescheduleJob == null)
                    {
                        *@<div>

                            @if (ViewBag.Courier == null)
                            {
                                <span class="data__title">If none of the above listed repair dates are suitable please choose a date using the calendar
                                </span>
                            }
                            else
                            {
                                <span class="data__title">If none of the above listed collection dates are suitable please choose a date using the calendar
                                </span>
                            }
                        </div>
                        @* }
                        else
                        {
                              <div>
                               @if (ViewBag.Courier== null)
                               {
                                <span class="data__title">Please select the preferred repair visit date
                                </span>
                               }
                               else
                               {
                                <span class="data__title">Please select the preferred collection date
                                </span>
                               }
                                  </div>
                        }*@

                        <div>
                            <span>

                                @*  <tr>*@


                                @*<td style="width:20%">*@<span><img id="date-of-CustomerPrefered-datepicker-btn" class="icon-calendar" src="/Content/Icons/ui-icon-calendar.png" alt="Select date" title="Select date" /></span>@*</td>*@
                                @*<td style="width:80%">*@<span>@Html.TextBoxFor(x => x.PreferredVisitDate, new { @class = "input datepicker", @id = "date-of-CustomerPrefered-datepicker" })
                                </span>@*</td>
                                    </tr> *@
                                <table class="data-simple">
                                    <tr>
                                        <td>
                                            <button type="button" class="button btn" id="get-date-info">Check availability</button></td>
                                    </tr>

                                </table>




                                @* @class = "input datepicker",*@


                                <p>@Html.ValidationMessageFor(x => x.PreferredVisitDate, null, new { @class = "error" })</p>
                                <span class="error" id="errmsg">@ViewBag.GetUnitError</span>
                               @* @if (ViewBag.NoAppointment != null)
                                {
                                    // <button type="submit" class="button" id="btnBookNoDate">Book without date</button>
                                    <a href="@String.Format("'{0}' ,{1}", DateTime.Now.AddDays(4).ToShortDateString(), "1000")" class="button bookDate" id="btnNoDate">Book without date</a>
                                }*@
                                <span class="success">@ViewBag.GetUnitSuccess</span>
                            </span>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>
    <div id="divConfirm" title="Confirm Booking " style="display: none">
        <p>
           <span id="msg">?</span>
        </p>


        @*@Html.ActionLink("Yes", null, null, new { @class = "button button-secondary no-btn", id="btnYes" })*@
        @*@Html.ActionLink("No", null, null, new { @class = "button button-secondary no-btn", id="btnclose" })*@
        @* <a href='@Url.Action("AddJobNote", "Job", new {noteText=noteText})' class="products-listing__appliance_ex">*@



    </div>

}



